services:
  blog:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      LOG_LEVEL: info
      CONSUL_ADDR: "http://consul:8500"
      CONSUL_ROOT: "milky-blog-service"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      consul:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine3.21
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_USER: blog
      POSTGRES_PASSWORD: blog
      POSTGRES_DB: blog
    ports:
      - "5432:5432"
    volumes:
      - postgres_blog_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U blog" ]
      interval: 5s
      timeout: 2s
      retries: 10

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio/
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: testuser
      MINIO_ROOT_PASSWORD: testpassword
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 2s
      retries: 10

  minio-mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./minio/init:/scripts
      - ./minio/policy:/policy
    environment:
      MINIO_SERVER: http://minio:9000
      MINIO_ROOT_USER: testuser
      MINIO_ROOT_PASSWORD: testpassword
      BLOG_USER: blog-user
      BLOG_PASSWORD: blog-secret
    entrypoint: >
      /bin/sh -c "
      for script in /scripts/*.sh; do
         echo \"Executing $$script\";
         sh $$script || exit 1;
       done;"

  consul:
    image: hashicorp/consul:1.21.2
    container_name: consul
    restart: unless-stopped
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 5s
      timeout: 2s
      retries: 10

volumes:
  postgres_blog_data:
  consul_data: